---
- hosts: localhost
  become: true
  tasks:
    - name: Install necessary packages
      yum:
        name:
          - dhcp-server
          - tftp-server
          - nfs-utils
          - grub2-efi-x64  # EFI bootloader package
        state: present

    - name: Create NFS directories for each distribution and automation files
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /var/nfs/iso
        - /var/nfs/iso/centos
        - /var/nfs/iso/fedora
        - /var/nfs/iso/ubuntu
        - /var/nfs/iso/debian
        - /var/nfs/iso/kali
        - /var/nfs/iso/automation  # Directory for automation files
      notify: Restart nfs

    - name: Create TFTP boot directory for EFI
      file:
        path: /var/lib/tftpboot/efi/boot
        state: directory
        mode: '0755'

    - name: Copy EFI boot files
      copy:
        src: /boot/efi/EFI/centos/grubx64.efi
        dest: /var/lib/tftpboot/efi/boot/grubx64.efi
        remote_src: yes

    - name: Create grub.cfg configuration file for EFI
      copy:
        dest: /var/lib/tftpboot/efi/boot/grub.cfg
        content: |
          set timeout=10
          menuentry 'Install CentOS' {
            linuxefi /var/nfs/iso/centos/vmlinuz
            initrdefi /var/nfs/iso/centos/initrd.img
            inst.repo=nfs:192.168.100.10:/var/nfs/iso/centos inst.ks=nfs:192.168.100.10:/var/nfs/iso/automation/ks-centos.cfg
          }
          menuentry 'Install Fedora' {
            linuxefi /var/nfs/iso/fedora/vmlinuz
            initrdefi /var/nfs/iso/fedora/initrd.img
            inst.repo=nfs:192.168.100.10:/var/nfs/iso/fedora inst.ks=nfs:192.168.100.10:/var/nfs/iso/automation/ks-fedora-gui.cfg
          }
          menuentry 'Install Ubuntu' {
            linuxefi /var/nfs/iso/ubuntu/vmlinuz
            initrdefi /var/nfs/iso/ubuntu/initrd.img
            autoinstall ds=nfs:192.168.100.10:/var/nfs/iso/automation/ai-ubuntu.yml
          }
          menuentry 'Install Debian' {
            linuxefi /var/nfs/iso/debian/vmlinuz
            initrdefi /var/nfs/iso/debian/initrd.img
            auto url=nfs:192.168.100.10:/var/nfs/iso/automation/ps-debian.cfg
          }
          menuentry 'Install Kali' {
            linuxefi /var/nfs/iso/kali/vmlinuz
            initrdefi /var/nfs/iso/kali/initrd.img
            auto url=nfs:192.168.100.10:/var/nfs/iso/automation/ps-kali-gui.cfg
          }

    - name: Mount and extract files from CentOS ISO
      block:
        - name: Create mount point for CentOS
          file:
            path: /mnt/centos
            state: directory

        - name: Mount CentOS ISO
          command: mount -o loop /home/lucian/iso/CentOS-Stream-9-latest-x86_64-dvd1.iso /mnt/centos

        - name: Copy initrd.img for CentOS
          copy:
            src: /mnt/centos/isolinux/initrd.img
            dest: /var/nfs/iso/centos/initrd.img
            remote_src: yes

        - name: Copy vmlinuz for CentOS
          copy:
            src: /mnt/centos/isolinux/vmlinuz
            dest: /var/nfs/iso/centos/vmlinuz
            remote_src: yes

        - name: Unmount CentOS ISO
          command: umount /mnt/centos

    - name: Mount and extract files from Fedora ISO
      block:
        - name: Create mount point for Fedora
          file:
            path: /mnt/fedora
            state: directory

        - name: Mount Fedora ISO
          command: mount -o loop /home/lucian/iso/Fedora-Everything-netinst-x86_64-40-1.14.iso /mnt/fedora

        - name: Copy initrd.img for Fedora
          copy:
            src: /mnt/fedora/images/pxeboot/initrd.img
            dest: /var/nfs/iso/fedora/initrd.img
            remote_src: yes

        - name: Copy vmlinuz for Fedora
          copy:
            src: /mnt/fedora/images/pxeboot/vmlinuz
            dest: /var/nfs/iso/fedora/vmlinuz
            remote_src: yes

        - name: Unmount Fedora ISO
          command: umount /mnt/fedora

    - name: Mount and extract files from Ubuntu ISO
      block:
        - name: Create mount point for Ubuntu
          file:
            path: /mnt/ubuntu
            state: directory

        - name: Mount Ubuntu ISO
          command: mount -o loop /home/lucian/iso/ubuntu-24.04.1-live-server-amd64.iso /mnt/ubuntu

        - name: Copy initrd.img for Ubuntu
          copy:
            src: /mnt/ubuntu/casper/initrd
            dest: /var/nfs/iso/ubuntu/initrd.img
            remote_src: yes

        - name: Copy vmlinuz for Ubuntu
          copy:
            src: /mnt/ubuntu/casper/vmlinuz
            dest: /var/nfs/iso/ubuntu/vmlinuz
            remote_src: yes

        - name: Unmount Ubuntu ISO
          command: umount /mnt/ubuntu

    - name: Mount and extract files from Debian ISO
      block:
        - name: Create mount point for Debian
          file:
            path: /mnt/debian
            state: directory

        - name: Mount Debian ISO
          command: mount -o loop /home/lucian/iso/debian-12.7.0-amd64-netinst.iso /mnt/debian

        - name: Copy initrd.img for Debian
          copy:
            src: /mnt/debian/install.amd/initrd.gz
            dest: /var/nfs/iso/debian/initrd.img
            remote_src: yes

        - name: Copy vmlinuz for Debian
          copy:
            src: /mnt/debian/install.amd/vmlinuz
            dest: /var/nfs/iso/debian/vmlinuz
            remote_src: yes

        - name: Unmount Debian ISO
          command: umount /mnt/debian

    - name: Mount and extract files from Kali ISO
      block:
        - name: Create mount point for Kali
          file:
            path: /mnt/kali
            state: directory

        - name: Mount Kali ISO
          command: mount -o loop /home/lucian/iso/kali-linux-2024.3-installer-netinst-amd64.iso /mnt/kali

        - name: Copy initrd.img for Kali
          copy:
            src: /mnt/kali/install.amd/initrd.gz
            dest: /var/nfs/iso/kali/initrd.img
            remote_src: yes

        - name: Copy vmlinuz for Kali
          copy:
            src: /mnt/kali/install.amd/vmlinuz
            dest: /var/nfs/iso/kali/vmlinuz
            remote_src: yes

        - name: Unmount Kali ISO
          command: umount /mnt/kali

    - name: Configure NFS exports
      copy:
        dest: /etc/exports
        content: |
          /var/nfs/iso 192.168.100.0/24(ro,sync,no_root_squash)
      notify: Restart nfs

    - name: Export NFS shares
      command: exportfs -a
      notify: Restart nfs

    - name: Configure DHCP server
      copy:
        dest: /etc/dhcp/dhcpd.conf
        content: |
          option domain-name "localdomain";
          option domain-name-servers 8.8.8.8, 8.8.4.4;
          default-lease-time 600;
          max-lease-time 7200;
          subnet 192.168.100.0 netmask 255.255.255.0 {
            range 192.168.100.100 192.168.100.200;
            option routers 192.168.100.2;

            # Check for UEFI 64-bit clients
            if substring(option vendor-class-identifier, 0, 10) = "PXEClient:0" {
              filename "grubx64.efi";
            }

            # Check for UEFI 32-bit clients
            elsif substring(option vendor-class-identifier, 0, 10) = "PXEClient:6" {
              filename "bootia32.efi";
            }
          }
      notify: Restart dhcpd

    - name: Configure DHCP interface
      copy:
        dest: /etc/sysconfig/dhcpd
        content: |
          DHCPD_INTERFACE="eth0"  # Replace 'eth0' with the correct interface name
      notify: Restart dhcpd

    - name: Verify DHCP configuration syntax
      command: dhcpd -t -cf /etc/dhcp/dhcpd.conf
      register: dhcpd_config_check
      ignore_errors: true

    - name: Fail if DHCP configuration is invalid
      fail:
        msg: "DHCP configuration file is invalid. Check /etc/dhcp/dhcpd.conf for errors."
      when: dhcpd_config_check.rc != 0

    - name: Enable and start DHCP and TFTP services
      service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - dhcpd
        - tftp
      notify: Reload firewalld

    - name: Enable and start NFS service
      service:
        name: nfs-server
        state: started
        enabled: true
      notify: Reload firewalld

    - name: Configure firewall
      firewalld:
        service: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - dhcp
        - tftp
        - nfs
      notify: Reload firewalld

  handlers:
    - name: Restart dhcpd
      service:
        name: dhcpd
        state: restarted

    - name: Restart nfs
      service:
        name: nfs-server
        state: restarted

    - name: Reload firewalld
      service:
        name: firewalld
        state: reloaded
